/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface SideDrawer {
    'headingTitle': string;
    'open': boolean;
    'openSideDrawer': () => Promise<void>;
  }
  interface StockPrice {
    'inputStockSymbol': string;
  }
  interface ToolTip {
    'text': string;
  }
}

declare global {


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLSideDrawerElement extends Components.SideDrawer, HTMLStencilElement {}
  var HTMLSideDrawerElement: {
    prototype: HTMLSideDrawerElement;
    new (): HTMLSideDrawerElement;
  };

  interface HTMLStockPriceElement extends Components.StockPrice, HTMLStencilElement {}
  var HTMLStockPriceElement: {
    prototype: HTMLStockPriceElement;
    new (): HTMLStockPriceElement;
  };

  interface HTMLToolTipElement extends Components.ToolTip, HTMLStencilElement {}
  var HTMLToolTipElement: {
    prototype: HTMLToolTipElement;
    new (): HTMLToolTipElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'side-drawer': HTMLSideDrawerElement;
    'stock-price': HTMLStockPriceElement;
    'tool-tip': HTMLToolTipElement;
  }
}

declare namespace LocalJSX {
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface SideDrawer {
    'headingTitle'?: string;
    'open'?: boolean;
  }
  interface StockPrice {
    'inputStockSymbol'?: string;
  }
  interface ToolTip {
    'text'?: string;
  }

  interface IntrinsicElements {
    'my-component': MyComponent;
    'side-drawer': SideDrawer;
    'stock-price': StockPrice;
    'tool-tip': ToolTip;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'side-drawer': LocalJSX.SideDrawer & JSXBase.HTMLAttributes<HTMLSideDrawerElement>;
      'stock-price': LocalJSX.StockPrice & JSXBase.HTMLAttributes<HTMLStockPriceElement>;
      'tool-tip': LocalJSX.ToolTip & JSXBase.HTMLAttributes<HTMLToolTipElement>;
    }
  }
}


